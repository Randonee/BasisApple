<project basedir=".">
	
	<property name="version" value="0.0.3-alpha"/>
	<property name="versionDir" value="0,0,3-alpha"/>
	
	<target name="ios">
		<delete dir="extension/project/obj" failOnError="false" includeEmptyDirs="true"/>
						
		<exec dir="extension/project" failonerror="true" executable="haxelib">
			<arg line="run hxcpp Build.xml -Diphonesim" />
		</exec>
		<exec dir="extension/project" failonerror="true" executable="haxelib">
			<arg line="run hxcpp Build.xml -Diphoneos -DHXCPP_ARMV7" />
		</exec>
		<exec dir="extension/project" failonerror="true" executable="haxelib">
			<arg line="run hxcpp Build.xml -Diphoneos" />
		</exec>
	</target>
	
	<target name="osx">
		<delete dir="extension/project/obj" failOnError="false" includeEmptyDirs="true"/>
						
		<exec dir="extension/project" failonerror="true" executable="haxelib">
			<arg line="run hxcpp Build.xml -Dmacos -DHXCPP_M64" />
		</exec>
	</target>
	
	<target name="buildHaxelib">
		<delete dir="build"/>
		
		<mkdir dir="build/"/>
		<mkdir dir="build/BasisApple"/>
		<mkdir dir="build/BasisApple/${versionDir}"/>
		<mkdir dir="build/BasisApple/${versionDir}/bin"/>
		<mkdir dir="build/BasisApple/${versionDir}/template"/>
		
		<exec dir="." failonerror="true" executable="haxe">
			<arg line="build.hxml" />
		</exec>
		
		<antcall target="copyTests" />
		
		<copy todir="build/BasisApple/${versionDir}/template/basis">
			<fileset dir="extension/project/objc/basis/"/>
		</copy>
		<copy todir="build/BasisApple/${versionDir}/template/objc_include">
			<fileset dir="extension/project/objc_include/"/>
		</copy>
		
		<copy todir="build/BasisApple/${versionDir}">
			<fileset dir="src"/>
		</copy>
		
		<copy todir="build/BasisApple/${versionDir}/bin">
			<fileset dir="extension/ndll"/>
		</copy>
		
		<copy todir="build/BasisApple/${versionDir}/bin">
			<fileset dir="bin"/>
		</copy>
	
		<copy todir="build/BasisApple/${versionDir}/template">
			<fileset dir="template"/>
		</copy>
	
		<copy file="haxelib.json" tofile="build/BasisApple/${versionDir}/haxelib.json"/>
		<copy file="build/run.n" tofile="build/BasisApple/${versionDir}/run.n"/>
		
		<echo file="build/BasisApple/.current" >${version}</echo>
		
		<zip destfile="build/BasisApple.zip" basedir="build/BasisApple" />
	</target>
	
	<target name="copyTests" if="buildProps.installTests"> 
		<copy todir="build/BasisApple/${versionDir}">
			<fileset dir="src_test"/>
		</copy>
	</target> 

	<target name="install">
		<exec dir="." failonerror="false" executable="haxelib">
			<arg line="remove BasisApple" />
		</exec>
		<antcall target="buildHaxelib" />
		<exec dir="." failonerror="true" executable="haxelib">
			<arg line="local build/BasisApple.zip" />
		</exec>
	</target>
	
	<target name="runtests">
		<antcall target="installib" >
			<param name="buildProps.installTests" value="true"/>
		</antcall>
		
		<echo file="build/test/ouput.txt" ></echo>
		<exec dir="." failonerror="true" executable="haxelib" output="build/test/ouput.txt">
			<arg line="run basis buildtests.xml apple" />
		</exec>
		
		<loadfile property="output" srcFile="build/test/ouput.txt"/>
		<echo message="${output}" />
		<condition property="testsPassed">
			<resourcecontains resource="build/test/ouput.txt" substring="TESTS_SUCCESS"/>
		</condition>
		
		<fail message="Build or tests Failed" unless="testsPassed"/>
	</target>
	
	<target name="ci">
		<delete dir="build"/>
		<mkdir dir="build/"/>
		<get src="https://github.com/Randonee/Basis/archive/master.zip" dest="build/basis.zip"/>
		<unzip src="build/basis.zip" dest="build"/>
		<exec dir="build/Basis-master" failonerror="true" executable="ant">
			<arg line="installib" />
		</exec>

		<antcall target="ios" />
		<antcall target="runtests" />
	</target>
	
</project>